package ru.maxim.barybians.data.database.dao

import androidx.room.*
import ru.maxim.barybians.data.database.model.AttachmentEntity
import ru.maxim.barybians.data.database.model.AttachmentEntity.Contract.Columns

@Dao
abstract class AttachmentDao {

    // If attachment in not in table yet, insert it and return autogenerated id.
    // Otherwise update and return old id, because Room update method returns number of updated rows instead of id
    suspend fun save(attachmentEntity: AttachmentEntity): Int {
        return if (attachmentEntity.attachmentId > 0 && getById(attachmentEntity.attachmentId) != null) {
            update(attachmentEntity)
            attachmentEntity.attachmentId
        } else {
            insert(attachmentEntity).toInt()
        }
    }

    @Query("SELECT * FROM ${AttachmentEntity.tableName} WHERE ${Columns.attachmentId}=:attachmentId")
    abstract fun getById(attachmentId: Int): AttachmentEntity?

    @Update(onConflict = OnConflictStrategy.REPLACE)
    abstract suspend fun update(attachmentEntity: AttachmentEntity)

    @Insert(onConflict = OnConflictStrategy.REPLACE)
    abstract suspend fun insert(attachmentEntity: AttachmentEntity): Long

    @Insert(onConflict = OnConflictStrategy.REPLACE)
    abstract suspend fun insert(attachmentEntity: List<AttachmentEntity>)

    @Query("DELETE FROM ${AttachmentEntity.tableName}")
    abstract suspend fun clear()
}